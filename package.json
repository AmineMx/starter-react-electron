{
  "name": "ps-viewer",
  "version": "0.0.1",
  "description": "",
  "scripts": {
    "build": "concurrently \"npm run build-main\" \"npm run build-renderer\"",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.main.config.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.renderer.config.js --colors",
    "dev": "cross-env START_HOT=1 npm run start-renderer-dev",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "ts": "tsc",
    "lint": "cross-env NODE_ENV=development eslint . --cache --ext .js,.jsx,.ts,.tsx",
    "lint-fix": "npm run --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore \"**/*.*(css|scss)\" --syntax scss",
    "lint-styles-fix": "npm run --silent lint-styles --fix; exit 0",
    "package": "npm run build && electron-builder build --publish never",
    "package-all": "npm run build && electron-builder build -mwl",
    "package-ci": "npm run postinstall && npm run build && electron-builder --publish always",
    "package-mac": "npm run build && electron-builder build --mac",
    "package-linux": "npm run build && electron-builder build --linux",
    "package-win": "npm run build && electron-builder build --win --x64",
    "postinstall": "ts-node scripts/CheckNativeDep.ts && electron-builder install-app-deps",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "prestart": "npm run build",
    "start": "cross-env NODE_ENV=production electron ./app/dist/main.prod.js",
    "start-main-dev": "cross-env START_HOT=1 NODE_ENV=development electron -r ./scripts/TSRegister.js ./app/src/main/main.ts",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.renderer.dev.config.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "npm run lint && npm run ts && npm run build && npm run test && npm run build-e2e && npm run test-e2e",
    "test-e2e": "ts-node ./scripts/CheckBuildsExist.ts && cross-env NODE_ENV=test testcafe electron:./app ./test/e2e/HomePage.e2e.ts",
    "test-e2e-live": "ts-node ./scripts/CheckBuildsExist.tss && cross-env NODE_ENV=test testcafe --live electron:./app ./test/e2e/HomePage.e2e.ts",
    "test-watch": "npm run test --watch"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/test/.+\\.spec)\\.tsx?$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json",
      "node"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/mocks/fileMock.js",
      "\\.(s?css|sass)$": "<rootDir>/mocks/styleMock.js"
    }
  },
  "build": {
    "productName": "StarterElectronReact",
    "appId": "org.dzworks.ElectronReact",
    "files": [
      "dist/",
      "node_modules/",
      "package.json"
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "starter-react-electron",
      "repo": "starter-react-electron",
      "private": false
    }
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com:AmineMx/starter-react-electron.git"
  },
  "author": {
    "name": "Amine Kaddache",
    "email": "psj.amine@gmail.com"
  },
  "license": "SEE LICENSE",
  "bugs": {
    "url": "https://github.com/AmineMx/starter-react-electron/issues"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      "last 1 chrome version"
    ],
    "development": [
      "last 1 chrome version"
    ]
  },
  "devDependencies": {
    "@types/react": "^16.9.34",
    "@types/react-dom": "^16.9.6",
    "chalk": "^4.0.0",
    "concurrently": "^5.1.0",
    "cross-env": "^7.0.2",
    "css-loader": "^3.5.2",
    "electron": "^13.6.6",
    "electron-builder": "^22.4.1",
    "electron-devtools-installer": "^3.0.0",
    "electron-rebuild": "^1.10.1",
    "eslint": "^6.8.0",
    "file-loader": "^6.0.0",
    "html-webpack-plugin": "^4.2.0",
    "mini-css-extract-plugin": "^0.9.0",
    "node-sass": "^4.13.1",
    "react-dev-utils": "^10.2.1",
    "resolve-url-loader": "^3.1.1",
    "sass-loader": "^8.0.2",
    "style-loader": "^1.1.3",
    "stylelint": "^13.3.2",
    "ts-loader": "^6.2.2",
    "ts-node": "^8.8.2",
    "typescript": "^3.8.3",
    "url-loader": "^4.1.0",
    "webpack": "^4.42.1",
    "webpack-cli": "^3.3.11",
    "webpack-dev-server": "^3.10.3",
    "webpack-merge": "^4.2.2"
  },
  "dependencies": {
    "react": "^16.13.1",
    "react-dom": "^16.13.1"
  }
}
